{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\mrcle\\\\Desktop\\\\react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nconst initialState = {\n  counter: 0\n};\nexport const plusCounterAction = () => {\n  return {\n    type: \"PLUS_COUNTER\"\n  };\n};\nexport const minusCounterAction = () => {\n  return {\n    type: \"MINUS_COUNTER\"\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case PLUS_COUNTER:\n      return _objectSpread({}, state, {\n        counter: state.counter + 1\n      });\n\n    case MINUS_COUNTER:\n      return _objectSpread({}, state, {\n        counter: state.counter - 1\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport const store = createStore(reducer, composeWithDevTools());","map":{"version":3,"sources":["C:\\Users\\mrcle\\desktop\\react\\src\\store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","initialState","counter","plusCounterAction","type","minusCounterAction","reducer","state","action","PLUS_COUNTER","MINUS_COUNTER","store"],"mappings":";;;;;;AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AADU,CAArB;AAIA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AACrC,SAAM;AACJC,IAAAA,IAAI,EAAE;AADF,GAAN;AAGD,CAJM;AAMP,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AACtC,SAAM;AACJD,IAAAA,IAAI,EAAE;AADF,GAAN;AAGD,CAJM;;AAMP,MAAME,OAAO,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACJ,IAAf;AACE,SAAKK,YAAL;AACE,+BACKF,KADL;AAEEL,QAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB;AAF3B;;AAIF,SAAKQ,aAAL;AACE,+BACKH,KADL;AAEEL,QAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB;AAF3B;;AAIF;AACE,aAAOK,KAAP;AAZJ;AAcD,CAfD;;AAiBA,OAAO,MAAMI,KAAK,GAAGb,WAAW,CAACQ,OAAD,EAAUN,mBAAmB,EAA7B,CAAzB","sourcesContent":["import {createStore, applyMiddleware} from 'redux'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n\r\nconst initialState = {\r\n  counter: 0,\r\n}\r\n\r\nexport const plusCounterAction = () => {\r\n  return{\r\n    type: \"PLUS_COUNTER\",\r\n  }\r\n}\r\n\r\nexport const minusCounterAction = () => {\r\n  return{\r\n    type: \"MINUS_COUNTER\",\r\n  }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case PLUS_COUNTER:\r\n      return{\r\n        ...state,\r\n        counter: state.counter + 1\r\n      }\r\n    case MINUS_COUNTER:\r\n      return{\r\n        ...state,\r\n        counter: state.counter - 1\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const store = createStore(reducer, composeWithDevTools())\r\n"]},"metadata":{},"sourceType":"module"}